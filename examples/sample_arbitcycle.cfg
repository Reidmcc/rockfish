# the minimum profit ratio for the bot to submit a payment cycle
# stated as a decimal > 1.0. 1.0 would mean the bot accepts breaking even, less than 1.0 would be a loss
MIN_RATIO=1.0001

# the asset sets are split into groups, which allows the use of multiple hold assets, and limits checking of useless pairs
# you can have an asset in more than one group, e.g. if you want XLM as the hold for two different sets of assets. 
# if you have groups with more than one repeated asset you'll end up with duplicates
# each group starts with a [[GROUPS]] take to mark the group split points
[[GROUPS]]
# the hold asset and issuer, this is the asset where your arbitrage cycle starts and ends
HOLD_ASSET_CODE="XLM"
# uncomment the HOLD_ASSET_ISSUER if your hold asset is not XLM
# HOLD_ASSET_ISSUER=""

# whether to use the account's entire available hold asset balance in the payment cycles
# if the hold asset is XLM the bot will reserve enough to keep the account valid
# to use a specified amount in the payment cycles set this to false, and set STATIC_AMOUNT, to a non-zero number
# if USE_BALANCE is set to true the STATIC_AMOUNT value will be ignored
USE_BALANCE=false
# quantity of the hold asset to use in the payment cycles, if not using balance
STATIC_AMOUNT=10.0
# at very low amounts a cycle can result in a loss due to fees, so we set a minimum amount to cycle
MIN_AMOUNT=1.0

# the list of candidate assets through which to cycle
# you must have at least two. If you list more than two all combinations will be checked each cycle
[[GROUPS.ASSETS]]
CODE="COUPON" # the code of the cycle asset
ISSUER="GSIGH..."   # the issuer of the asset. if the asset is XLM leave set this to ""

[[GROUPS.ASSETS]]
CODE="OTHTOKEN"
ISSUER="GKISH..."

# [[GROUPS.ASSETS]]...

# [[GROUPS]]
# HOLD_ASSET_CODE="OTH"...
