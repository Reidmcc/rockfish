# Sample config file for the "balanced" strategy

# what % deviation from the ideal price is allowed before we reset the price, specified as a decimal (0 < PRICE_TOLERANCE < 1.00)
PRICE_TOLERANCE=0.10

# what % deviation from the ideal amount is allowed before we reset the price, specified as a decimal (0 < AMOUNT_TOLERANCE < 1.00)
AMOUNT_TOLERANCE=0.10

# define the bid/ask spread that you are willing to provide. spread is a percentage specified as a decimal number (0 < spread < 1.00) - here it is 0.1%
SPREAD=0.001

# reduces the order size by this percentage (specified as a decimal number). if someone buys and sells the full order amount placed you will end up with a profit equaling this percentage multiplied by the full order amount, effectively making this a spread.
MIN_AMOUNT_SPREAD = 0.0005
MAX_AMOUNT_SPREAD = 0.0005

# max number of levels to have on either side. Defines how deep of an orderbook you want to make.
MAX_LEVELS = 45

# value between 0.0 to 1.0 used as a probability of adding orders at a given price level. Setting this to 1.0 will give a more jagged look to the orderbook.
LEVEL_DENSITY = 1.0

# always adds the first N levels. If your LEVEL_DENSITY is < 1.0 then this will ensure you have your first N levels at the "tip" of the orderbook on either side.
ENSURE_FIRST_N_LEVELS = 10

# if the LEVEL_DENSITY is < 1.0 then we accummulate the amount that was "left over", calling it the "amountCarryover". This spread configuration (specified as a decimal number) reduces the amount we carryover which can provide some randomness to the depth chart produced while still keeping a relatively deep orderbook. This increases the profits seen by the bot if the bot buys and sells at the same spread level (assuming the same center price).
MIN_AMOUNT_CARRYOVER_SPREAD = 0.0100
MAX_AMOUNT_CARRYOVER_SPREAD = 0.0100

# probability of including the carryover at a level that will be added, i.e. given that the bot decides to add the level then this is the probability that the carryover amount will be added to that level
CARRYOVER_INCLUSION_PROBABILITY = 1.00

# virtual balance to use so we can smoothen out the curve. This also has the benefit of increasing order amounts placed by the bot. However, if this is set to a value greater than 0.0 then there is a likelihood that the bot will run out of the asset that has a virtual balance set.
VIRTUAL_BALANCE_BASE = 0.0
VIRTUAL_BALANCE_QUOTE = 0.0
